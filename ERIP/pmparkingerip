#!/usr/bin/php
<?php

set_include_path(get_include_path() . PATH_SEPARATOR . "/usr/local/mgr5/include/php");
define('__MODULE__', "pmparkingerip");

require_once 'bill_util.php';

$longopts  = array
(
    "command:",
    "payment:",
    "amount:",
);

$options = getopt("", $longopts);

try {
	$command = $options['command'];
	Debug("command ". $options['command']);

	if ($command == "config") {
		$config_xml = simplexml_load_string($default_xml_string);
		$feature_node = $config_xml->addChild("feature");

		// $feature_node->addChild("refund", 		"on");
		// $feature_node->addChild("transfer", 		"on");
		// $feature_node->addChild("redirect", 		"on");
		// $feature_node->addChild("noselect", 		"on");
 		$feature_node->addChild("notneedprofile", 	"on");

		// $feature_node->addChild("pmtune", 			"on");
        $feature_node->addChild("pmvalidate", 		"on");

		// $feature_node->addChild("crtune", 			"on");
		// $feature_node->addChild("crvalidate", 		"on");
// 		$feature_node->addChild("crset", 			"on");
		// $feature_node->addChild("crdelete", 		"on");

		// $feature_node->addChild("rftune", 			"on");
		// $feature_node->addChild("rfvalidate", 		"on");
		// $feature_node->addChild("rfset", 			"on");

		// $feature_node->addChild("tftune", 			"on");
		// $feature_node->addChild("tfvalidate", 		"on");
		// $feature_node->addChild("tfset", 			"on");

		// $param_node = $config_xml->addChild("param");

		// $param_node->addChild("payment_script", "/cgi/parkingerippayment.php");

		echo $config_xml->asXML();
	} elseif ($command == "pmtune") {
	// 	$paymethod_form = simplexml_load_string(file_get_contents('php://stdin'));
	// 	$pay_source = $paymethod_form->addChild("slist");
	// 	$pay_source->addAttribute("name", "pay_source");
	// 	$pay_source->addChild("msg", "qw");
	// 	$pay_source->addChild("msg", "mobile");
	// 	echo $paymethod_form->asXML();
		$form = file_get_contents('php://stdin');
		Debug($form);
		return $form;
	} elseif ($command == "pmvalidate") {
		$paymethod_form = simplexml_load_string(file_get_contents('php://stdin'));
		Debug($paymethod_form->asXML());

		$API_USER = $paymethod_form->API_USER;
		$API_PASSWORD = $paymethod_form->API_PASSWORD;
        $API_KEY = $paymethod_form->API_KEY;
		$ERIP_ID = $paymethod_form->ERIP_ID;

		Debug($API_USER);
        Debug($API_PASSWORD);
		Debug($API_KEY);
		Debug($ERIP_ID);

		if (!preg_match("/^[a-zA-Z0-9]+$/", $API_USER)) {
			throw new billmgrErrorException("value", "API_USER", $API_USER);
		}

		if (!preg_match("/^[a-zA-Z0-9]+$/", $API_PASSWORD)) {
			throw new BillmgrErrorExxeption("value", "API_PASSWORD", $API_PASSWORD);
		}
        
        if (!preg_match("/^[a-z0-9]{128}$/", $API_KEY)) {
			throw new BillmgrErrorException("value", "API_KEY", $API_KEY);
		}

         if (!preg_match("/^[0-9]{1,8}$/", $ERIP_ID)) {
			throw new BillmgrErrorException("value", "ERIP_ID", $ERIP_ID);
		}

		echo $paymethod_form->asXML();
	} else {
		throw new BillmgrError("unknown command");
	}
} catch (Exception $e) {
	echo $e;
}
